import streamlit as st
from database import register_vehicle_exit, get_all_drivers, check_driver_has_active_vehicle
from utils import check_login, save_uploaded_file

# Configura칞칚o da p치gina
st.set_page_config(
    page_title="Registrar Sa칤da - Sistema de Gest칚o de Ve칤culos",
    page_icon="游뚱",
    layout="wide"
)

# Verificar login
check_login()

# T칤tulo da p치gina
st.title("Registrar Sa칤da de Ve칤culo")

# Buscar condutores cadastrados
drivers = get_all_drivers()

if not drivers:
    st.error("N칚o h치 condutores cadastrados. Por favor, cadastre um condutor primeiro.")
    st.stop()

# Formul치rio de registro
with st.form("exit_form"):
    # Selecionar condutor
    driver_options = {f"{v['nome']} - CNH: {v['cnh']}": k for k, v in drivers.items()}
    selected_driver = st.selectbox("Selecione o Condutor", options=list(driver_options.keys()))
    driver_id = driver_options[selected_driver]
    
    # Verificar se o condutor j치 tem ve칤culo em uso
    if check_driver_has_active_vehicle(driver_id):
        st.error("Este condutor j치 possui um ve칤culo em uso")
        st.stop()
    
    # Tipo de ve칤culo
    tipo_veiculo = st.selectbox("Tipo de Ve칤culo", ["Carro", "Moto"])
    
    # Od칪metro
    odometro = st.number_input("Od칪metro de Sa칤da", min_value=0, step=1)
    
    # Check de avaria
    tem_avaria = st.checkbox("Ve칤culo com avaria?")
    
    # Upload de foto (opcional)
    foto_avaria = None
    if tem_avaria:
        foto_avaria = st.file_uploader("Foto da Avaria", type=["jpg", "jpeg", "png"])
    
    # Bot칚o de submit
    submitted = st.form_submit_button("Registrar Sa칤da")
    
    if submitted:
        # Preparar dados
        data = {
            "driver_id": driver_id,
            "tipo_veiculo": tipo_veiculo,
            "odometro_saida": odometro,
            "tem_avaria": tem_avaria,
            "foto_avaria": None
        }
        
        # Salvar foto se houver
        if foto_avaria:
            data["foto_avaria"] = save_uploaded_file(foto_avaria)
        
        # Registrar sa칤da
        exit_id, message = register_vehicle_exit(data)
        if exit_id:
            st.success(message)
        else:
            st.error(message) 